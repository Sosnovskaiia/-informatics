/* Напишите процедуру, удаляющую из динамически выделенного массива
максимальный и минимальный элементы (если таковых несколько – удалить
нужно все). По окончании работы процедуры количество выделенной памяти
должно уменьшиться. */

#include <iostream>
using namespace std;

int max (int* a, int b)
{
    int g = *a;
    for (int i = 0; i < b; i++)
    {
        if ((*(a + i)) > g)
        {
            g = *(a+i);
        };
    };
    return g;
}

int min (int* a, int b)
{
    int g = *a;
    for (int i = 0; i < b; i++)
    {
        if ((*(a + i)) < g)
        {
            g = *(a+i);
        };
    };
    return g;
}

int colvo (int* a, int b)
{
    int m = 0;
    for (int i = 0; i < b; i++)
    {
        if (((*(a + i)) == (max(a,b))) || ((*(a+i)) == (min(a,b))))
        {
            m++;
        };
    };
    return m;
}

void w(int* &a, int b)
{
    int r = colvo(a, b);
    int* th = new int [b - r];
    int k = 0;

    for (int i = 0; i < b; i++)
    {
        if (((*(a + i)) != max(a,b)) && ((*(a + i)) != min(a,b)))
        {
            *(th + k) = *(a + i);
            k++;
        };
    };

    a = th;
}

int main()
{
    int n;
    cin >> n;
    int* p = new int [n];
    for (int i = 0; i < n; i++)
    {
        cin >> *(p + i);
    };

    int f = colvo(p, n);
    w(p, n);
    cout << '\n';

    for (int i = 0; i < (n - f); i++)
    {
        cout << *(p+i) << " ";
    };

    delete[]p;
}
